#!/usr/bin/env bash

set -o errexit

cp config.py config.tmp.py
mkdir -p ec2-outputs
rm -r output


# ALL TEMPLATES ACTIVE

echo "Starting experiment with all templates active ..."
sed -i '' 's/DEACTIVATE_CONTROLLER_TEMPLATE.*/DEACTIVATE_CONTROLLER_TEMPLATE = False/g' config.py
sed -i '' 's/DEACTIVATE_BINDING_MEMOIZATION.*/DEACTIVATE_BINDING_MEMOIZATION = False/g' config.py
echo "Change in config:"
diff config.tmp.py config.py

./run.py -a t &> /dev/null
sleep 60
./run.py -a r &> run.log
sleep 240
echo "4 minutes done ..."
sleep 240
echo "8 minutes done ..."
sleep 240
echo "12 minutes done ..."
sleep 240
echo "16 minutes done ..."
sleep 240
echo "20 minutes done ..."
sleep 240
echo "24 minutes done ..."
sleep 240
echo "28 minutes done ..."
sleep 240
echo "32 minutes done ..."
./run.py -a c &> /dev/null
sleep 90
val=`grep -i terminate output/ec2_log.txt | awk '{ print $4 }'`
if [ -z $val ]
then
  val="blah"
fi
while [ $val != "Terminated." ]
do
    echo "Waiting for computation to terminate ..."
    sleep 210
    ./run.py -a c &> /dev/null
    sleep 90
    val=`grep -i terminate output/ec2_log.txt | awk '{ print $4 }'`
    if [ -z $val ]
    then
      val="blah"
    fi
done
echo "Please check if experiment terminated correctly, here's grep output"
grep -i initialize output/ec2_log.txt
grep -i terminate output/ec2_log.txt
mv output ec2-outputs/templates


# CONTROLLER TEMPLATE OFF

echo "Starting experiment with controller templates off ..."
sed -i '' 's/DEACTIVATE_CONTROLLER_TEMPLATE.*/DEACTIVATE_CONTROLLER_TEMPLATE = True/g' config.py
sed -i '' 's/DEACTIVATE_BINDING_MEMOIZATION.*/DEACTIVATE_BINDING_MEMOIZATION = False/g' config.py
echo "Change in config:"
diff config.old.py config.py

./run.py -a t &> /dev/null
sleep 60
./run.py -a r &> run.log
sleep 240
echo "4 minutes done ..."
sleep 240
echo "8 minutes done ..."
sleep 240
echo "12 minutes done ..."
sleep 240
echo "16 minutes done ..."
sleep 240
echo "20 minutes done ..."
sleep 240
echo "24 minutes done ..."
sleep 240
echo "28 minutes done ..."
sleep 240
echo "32 minutes done ..."
./run.py -a c &> /dev/null
sleep 90
val=`grep -i terminate output/ec2_log.txt | awk '{ print $4 }'`
if [ -z $val ]
then
  val="blah"
fi
while [ $val != "Terminated." ]
do
    echo "Waiting for computation to terminate ..."
    sleep 210
    ./run.py -a c &> /dev/null
    sleep 90
    val=`grep -i terminate output/ec2_log.txt | awk '{ print $4 }'`
    if [ -z $val ]
    then
        val="blah"
    fi
done
echo "Please check if experiment terminated correctly, here's grep output"
grep -i initialize output/ec2_log.txt
grep -i terminate output/ec2_log.txt
mv output ec2-outputs/no-ctemp


# BINDING MEMOIZATION OFF

echo "Starting experiment with memoization off ..."
sed -i '' 's/DEACTIVATE_CONTROLLER_TEMPLATE.*/DEACTIVATE_CONTROLLER_TEMPLATE = False/g' config.py
sed -i '' 's/DEACTIVATE_BINDING_MEMOIZATION.*/DEACTIVATE_BINDING_MEMOIZATION = True/g' config.py
echo "Change in config:"
diff config.old.py config.py

./run.py -a t &> /dev/null
sleep 60
./run.py -a r &> run.log
sleep 240
echo "4 minutes done ..."
sleep 240
echo "8 minutes done ..."
sleep 240
echo "12 minutes done ..."
sleep 240
echo "16 minutes done ..."
sleep 240
echo "20 minutes done ..."
sleep 240
echo "24 minutes done ..."
sleep 240
echo "28 minutes done ..."
sleep 240
echo "32 minutes done ..."
./run.py -a c &> /dev/null
sleep 90
val=`grep -i terminate output/ec2_log.txt | awk '{ print $4 }'`
if [ -z $val ]
then
  val="blah"
fi
while [ $val != "Terminated." ]
do
    echo "Waiting for computation to terminate ..."
    sleep 210
    ./run.py -a c &> /dev/null
    sleep 90
    val=`grep -i terminate output/ec2_log.txt | awk '{ print $4 }'`
    if [ -z $val ]
    then
      val="blah"
    fi
done
echo "Please check if experiment terminated correctly, here's grep output"
grep -i initialize output/ec2_log.txt
grep -i terminate output/ec2_log.txt
mv output ec2-outputs/no-btemp


# CLEANING TEMPORARY FILES

echo "Cleaning temporary files ..."
mv config.tmp.py config.py


# KILLING INSTANCES

echo "Killing instances"
./run.py -a k &> /dev/null
