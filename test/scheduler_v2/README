------------------------------------------------------------------------------
Author:	omidm@stanford.edy (Omid Mashayekhi)
------------------------------------------------------------------------------
------------------------------------------------------------------------------
Description: Scheduler Version II
------------------------------------------------------------------------------
This is a scheduler that in addition to basic scheduler functionalities, has a
simple logic for job assignments to the workers. Basic functionalities includes
deciphering the right version for a logical data objects, adding necessary
create and copy jobs, enforcing correctness based on the program flow graph,
basic garbage collection and physical instance reuse to avoid memory leaks and
updating before sets to avoid race conditions.

The simple logic for job assignment, tries to reduce the amount of data
exchange while simultaneously load balance over the registered workers. There
is a tension between load-balancing and data exchange reduction and it could be
an optimization problem to solve; however this scheduler uses a simple
approach. It tries to classify the jobs based on the logical data objects in
the read/write set of a job, and then uniformly assigns each group to a
registered worker. By grouping the jobs that operate over same/ close logical
data objects the data exchange is reduced. This scheduler uses geometric region
information to partition the simulation domain among the workers.

------------------------------------------------------------------------------
Build instructions:
------------------------------------------------------------------------------
1. Build Nimbus: issue make in the nimbus/ folder.
2. Build Scheduler: issue make in this folder.

------------------------------------------------------------------------------
Run/ Usage:
------------------------------------------------------------------------------
Run: ./scheduler
    REQUIRED ARGUMENTS:
      -wn [numbre-of-initial-workers]
        number of initial workers that scheduler waits for connection before
        assigning the main job and starting the application. (default 2)

      -port [listening-port-for-workers-to-connect-to]:
        scheduler server listening port that workers will try to connect to.

* default number of workers is set in scheduler/scheduler.cc as
* DEFAULT_MIN_WORKER_TO_JON, currently it is 2.

------------------------------------------------------------------------------
Notes:
------------------------------------------------------------------------------

